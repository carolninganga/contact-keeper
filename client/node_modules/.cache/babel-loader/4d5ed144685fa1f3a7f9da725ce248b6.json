{"ast":null,"code":"var _jsxFileName = \"/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, \"Please add a contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","CSSTransition","TransitionGroup","ContactContext","ContactItem","Contacts","contactContext","contacts","filtered","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,cAAc,GAAGN,UAAU,CAACG,cAAD,CAAjC;AAEA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,cAA/B;;AAEA,MAAGC,QAAQ,CAACE,MAAT,KAAoB,CAAvB,EAA0B;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AAID,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,QAAQ,KAAK,IAAb,GACEA,QAAQ,CAACE,GAAT,CAAaC,OAAO,iBAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,UAAU,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADF,CADF,GAMCJ,QAAQ,CAACG,GAAT,CAAaC,OAAO,iBAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA5B;AAAgC,IAAA,OAAO,EAAE,GAAzC;AAA8C,IAAA,UAAU,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CAPF,CADJ,CADJ;AAiBH,CA5BD;;AA8BA,eAAeN,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\n\n\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n\n    const { contacts, filtered } = contactContext;\n\n    if(contacts.length === 0) {\n        return <h4>Please add a contact</h4>\n    }\n\n\n\n    return (\n        <Fragment>\n            <TransitionGroup>\n            {filtered !== null\n             ? filtered.map(contact => (\n                 <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n                </CSSTransition>\n             ))\n            : contacts.map(contact => (\n                <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>      \n        </Fragment>\n    );\n};\n\nexport default Contacts"]},"metadata":{},"sourceType":"module"}