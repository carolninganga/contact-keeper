{"ast":null,"code":"import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        conatcts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","conatcts","payload","loading","contacts","map","contact","id","filter","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,aATJ,QAUO,UAVP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFd;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKb,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHM,QAAAA,QAAQ,EAAE,CAAC,GAAGN,KAAK,CAACM,QAAV,EAAoBL,MAAM,CAACG,OAA3B,CAFP;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKT,cAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHM,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACG,OAAP,CAAeK,EAA9B,GACxCR,MAAM,CAACG,OADiC,GACvBI,OADP,CAFP;AAIHH,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAOJ,SAAKZ,cAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHM,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAAN,CAAeI,MAAf,CAAsBF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACG,OAAvD,CAFP;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHW,QAAAA,OAAO,EAAEV,MAAM,CAACG;AAFb,OAAP;;AAKJ,SAAKT,aAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHW,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKd,eAAL;AACI,aAAO,EACP,GAAGG,KADI;AAEPY,QAAAA,QAAQ,EAAEZ,KAAK,CAACM,QAAN,CAAeI,MAAf,CAAsBF,OAAO,IAAI;AACvC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOI,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,SAHS;AAFH,OAAP;;AAOJ,SAAKf,YAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHY,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ,SAAKb,aAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHkB,QAAAA,KAAK,EAAEjB,MAAM,CAACG;AAFX,OAAP;;AAIJ;AACQ,aAAOJ,KAAP;AA1DZ;AA4DH,CA7DD","sourcesContent":["import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case GET_CONTACTS:\n            return {\n                ...state,\n                conatcts: action.payload,\n                loading: false\n            }\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload],\n                loading: false\n            };\n\n        case UPDATE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ?\n                action.payload : contact),\n                loading: false\n            }\n\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\n                loading: false\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n    \n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n        case FILTER_CONTACTS:\n            return {\n            ...state,\n            filtered: state.contacts.filter(contact => {\n                const regex = new RegExp(`${action.payload}`, 'gi');\n                return contact.name.match(regex) || contact.email.match(regex);\n            })\n        }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            };\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        default:\n                return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}