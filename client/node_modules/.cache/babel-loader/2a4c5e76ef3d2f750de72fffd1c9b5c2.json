{"ast":null,"code":"var _jsxFileName = \"/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layouts/Spinner';\nimport ContactItem from './ContactItem';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    }, \"Please add a contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, contacts !== null && !loading ? /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })))) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","Spinner","ContactItem","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,cAAc,GAAGR,UAAU,CAACI,cAAD,CAAjC;AAEA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA+CJ,cAArD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAGF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAAzC,IAA8C,CAACD,OAAlD,EAA2D;AACvD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AAID,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,gBACG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHF,QAAQ,KAAK,IAAb,GACEA,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADF,CADF,GAMCN,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CAPE,CADH,gBAcG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfR,CADJ;AAoBH,CApCD;;AAsCA,eAAeR,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layouts/Spinner';\nimport ContactItem from './ContactItem';\n\n\nconst Contacts = () => {\n    const contactContext = useContext(ContactContext);\n\n    const { contacts, filtered, getContacts, loading } = contactContext;\n\n    useEffect(() => {\n        getContacts()\n        //eslint-disable-next-line\n    }, []);\n\n    if(contacts !== null && contacts.length === 0 && !loading) {\n        return <h4>Please add a contact</h4>\n    }\n\n\n\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup>\n            {filtered !== null\n             ? filtered.map(contact => (\n                 <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n                </CSSTransition>\n             ))\n            : contacts.map(contact => (\n                <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n                <ContactItem contact={contact} />\n                </CSSTransition>\n            ))}\n            </TransitionGroup> \n            ) : <Spinner />}\n                \n        </Fragment>\n    );\n};\n\nexport default Contacts"]},"metadata":{},"sourceType":"module"}