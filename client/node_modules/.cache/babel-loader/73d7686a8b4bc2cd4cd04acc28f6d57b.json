{"ast":null,"code":"var _jsxFileName = \"/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ConactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER } from '../types';\nimport contactContext from './ContactContext';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Sara Louis',\n      email: 's@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'ken Lou',\n      email: 'k@gmail.com',\n      phone: '299-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Tom Litman',\n      email: 't@gmail.com',\n      phone: '222-222-000',\n      type: 'professional'\n    }]\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n  // Delete Contact\n  // Clear Current Contact\n  //Update Contact\n  // Filter Contacts\n  //Clear filter\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ConactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","contactContext","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,YAPJ,QAQO,UARP;AASA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAC,YAFT;AAGIC,MAAAA,KAAK,EAAC,aAHV;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KADM,EAQN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAC,SAFT;AAGIC,MAAAA,KAAK,EAAC,aAHV;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KARM,EAeN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAC,YAFT;AAGIC,MAAAA,KAAK,EAAC,aAHV;AAIIC,MAAAA,KAAK,EAAE,aAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAfM;AADO,GAArB;AA0BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACG,cAAD,EAAiBW,YAAjB,CAApC,CA3B0B,CA6B1B;AAEA;AAEA;AAEA;AAEA;AAEA;;AAGA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAEM,KAAK,CAACN;AADb,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKSF,KAAK,CAACU,QALf,CADJ;AASH,CAnDD;;AAqDA,eAAeX,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ConactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER\n} from '../types';\nimport contactContext from './ContactContext';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n                id: 1,\n                name:'Sara Louis',\n                email:'s@gmail.com',\n                phone: '222-222-2222',\n                type: 'personal'\n            },\n            {\n                id: 2,\n                name:'ken Lou',\n                email:'k@gmail.com',\n                phone: '299-222-2222',\n                type: 'personal'\n            },\n            {\n                id: 3,\n                name:'Tom Litman',\n                email:'t@gmail.com',\n                phone: '222-222-000',\n                type: 'professional'\n            }\n        ]\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    // Add Contact\n\n    // Delete Contact\n\n    // Clear Current Contact\n\n    //Update Contact\n\n    // Filter Contacts\n\n    //Clear filter\n\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts\n            }}\n            >\n                {props.children}\n            </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}