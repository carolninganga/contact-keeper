{"ast":null,"code":"var _jsxFileName = \"/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport ContactContext from './contactContext';\nimport axios from 'axios';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, CLEAR_FILTER, FILTER_CONTACTS } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    } // contact.id = \"id\" + Math.random().toString(16).slice(2);\n\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","ContactContext","axios","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","CLEAR_FILTER","FILTER_CONTACTS","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","CONTACT_ERROR","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport ContactContext from './contactContext';\nimport axios from 'axios';\nimport ContactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    CLEAR_FILTER,\n    FILTER_CONTACTS\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    // Add Contact\n\n    const addContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n            dispatch({type: ADD_CONTACT, payload: res.data });\n        } catch (err) {\n            dispatch({\n                type: CONTACT_ERROR,\n                payload: err.response.msg\n            });\n\n        }\n        \n        // contact.id = \"id\" + Math.random().toString(16).slice(2);\n    }\n\n    // Delete Contact\n\n    const deleteContact = id => {   \n        dispatch({type: DELETE_CONTACT, payload: id });\n    }\n\n    // Set Current Contact\n    const setCurrent = contact => {   \n        dispatch({type: SET_CURRENT, payload: contact });\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {   \n        dispatch({ type: CLEAR_CURRENT });\n    }\n    //Update Contact\n\n    const updateContact = contact => {   \n        dispatch({ type: UPDATE_CONTACT, payload: contact });\n    }\n\n    // Filter Contacts\n\n    const filterContacts = text => {   \n        dispatch({ type: FILTER_CONTACTS, payload: text });\n    }\n\n    //Clear filter\n\n    const clearFilter = () => {   \n        dispatch({ type: CLEAR_FILTER });\n    }\n\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filtered: state.filtered,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent,\n                updateContact,\n                filterContacts,\n                clearFilter\n            }}\n            >\n                {props.children}\n            </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}