{"ast":null,"code":"var _jsxFileName = \"/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/components/contacts/ContactItem.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactItem = ({\n  contact\n}) => {\n  const contactContext = useContext(ContactContext);\n  const {\n    id,\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-primary text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, name, ' ', \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      float: 'right'\n    },\n    className: 'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }\n  }, type.charAt(0).toUpperCase() + type.slice(1))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, email && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-envelope-open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }), \" \", email), phone && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), \" \", phone)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Delete\")));\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default ContactItem;","map":{"version":3,"sources":["/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/components/contacts/ContactItem.js"],"names":["React","useContext","PropTypes","ContactContext","ContactItem","contact","contactContext","id","name","email","phone","type","float","charAt","toUpperCase","slice","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAMC,cAAc,GAAGL,UAAU,CAACE,cAAD,CAAjC;AAKA,QAAM;AAAEI,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAmCN,OAAzC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,IADL,EACW,GADX,oBACgB;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAb;AACR,IAAA,SAAS,EAAE,YAAYD,IAAI,KAAK,cAAT,GAA0B,eAA1B,GAA4C,eAAxD,CADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEPA,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BH,IAAI,CAACI,KAAL,CAAW,CAAX,CAFxB,CADhB,CADJ,eAOI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OAC4CA,KAD5C,CAFR,EAMKC,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,OACoCA,KADpC,CAPR,CAPJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAnBJ,CADJ;AA2BH,CAlCD;;AAoCAN,WAAW,CAACY,SAAZ,GAAwB;AACpBX,EAAAA,OAAO,EAAEH,SAAS,CAACe,MAAV,CAAiBC;AADN,CAAxB;AAIA,eAAed,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/ContactContext';\n\n\nconst ContactItem = ({ contact }) => {\n    const contactContext = useContext(ContactContext);\n\n\n\n\n    const { id, name, email, phone, type } = contact;\n    return (\n        <div className='card bg-light'>\n            <h3 className='text-primary text-left'>\n                {name}{' '} <span style={{ float: 'right' }} \n                    className={'badge ' + (type === 'professional' ? 'badge-success' : 'badge-primary' )}>\n                    {type.charAt(0).toUpperCase() + type.slice(1)}\n                </span>\n            </h3>\n            <ul className=\"list\">\n                {email && ( \n                    <li>\n                        <i className='fas fa-envelope-open' /> {email}\n                    </li>\n                )}\n                {phone && (\n                    <li>\n                        <i className='fas fa-phone' /> {phone}\n                    </li>\n                )}\n            </ul>\n            <p>\n                <button className=\"btn btn-dark btn-sm\">Edit</button>\n                <button className=\"btn btn-danger btn-sm\">Delete</button>\n\n            </p>\n        </div>\n    )\n};\n\nContactItem.propTypes = {\n    contact: PropTypes.object.isRequired\n};\n\nexport default ContactItem;"]},"metadata":{},"sourceType":"module"}