{"ast":null,"code":"var _jsxFileName = \"/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react'; //import {v4 as uuid} from 'uuid';\n//import { uuid } from 'uuidv4';\n\nimport ContactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER } from '../types';\nimport contactContext from './ContactContext';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Sara Louis',\n      email: 's@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'ken Lou',\n      email: 'k@gmail.com',\n      phone: '299-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Tom Litman',\n      email: 't@gmail.com',\n      phone: '222-222-000',\n      type: 'professional'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = \"id\" + Math.random().toString(16).slice(2);\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n  // Filter Contacts\n  //Clear filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/carolineninganga/Desktop/Development/Udemy/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","contactContext","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","Math","random","toString","slice","payload","deleteContact","setCurrent","clearCurrent","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;AACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,YAPJ,QAQO,UARP;AASA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAC,YAFT;AAGIC,MAAAA,KAAK,EAAC,aAHV;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KADM,EAQN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAC,SAFT;AAGIC,MAAAA,KAAK,EAAC,aAHV;AAIIC,MAAAA,KAAK,EAAE,cAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KARM,EAeN;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAC,YAFT;AAGIC,MAAAA,KAAK,EAAC,aAHV;AAIIC,MAAAA,KAAK,EAAE,aAJX;AAKIC,MAAAA,IAAI,EAAE;AALV,KAfM,CADO;AAwBjBC,IAAAA,OAAO,EAAE;AAxBQ,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACE,cAAD,EAAiBW,YAAjB,CAApC,CA5B0B,CA8B1B;;AAEA,QAAMU,UAAU,GAAGC,OAAO,IAAI;AAE1BA,IAAAA,OAAO,CAACT,EAAR,GAAa,OAAOU,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAApB;AACAN,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEhB,WAAP;AAAoB0B,MAAAA,OAAO,EAAEL;AAA7B,KAAD,CAAR;AACH,GAJD,CAhC0B,CAsC1B;;;AAEA,QAAMM,aAAa,GAAGf,EAAE,IAAI;AACxBO,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEf,cAAP;AAAuByB,MAAAA,OAAO,EAAEd;AAAhC,KAAD,CAAR;AACH,GAFD,CAxC0B,CA4C1B;;;AACA,QAAMgB,UAAU,GAAGP,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEd,WAAP;AAAoBwB,MAAAA,OAAO,EAAEL;AAA7B,KAAD,CAAR;AACH,GAFD,CA7C0B,CAiD1B;;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACvBV,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEb;AAAP,KAAD,CAAR;AACH,GAFD,CAlD0B,CAqD1B;AAEA;AAEA;;;AAGA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QADb;AAEHM,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFZ;AAGHG,MAAAA,UAHG;AAIHO,MAAAA,aAJG;AAKHC,MAAAA,UALG;AAMHC,MAAAA;AANG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUSpB,KAAK,CAACqB,QAVf,CADJ;AAcH,CA1ED;;AA4EA,eAAetB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\n//import {v4 as uuid} from 'uuid';\n//import { uuid } from 'uuidv4';\nimport ContactContext from './ContactContext';\nimport ContactReducer from './ContactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACT,\n    CLEAR_FILTER\n} from '../types';\nimport contactContext from './ContactContext';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [\n            {\n                id: 1,\n                name:'Sara Louis',\n                email:'s@gmail.com',\n                phone: '222-222-2222',\n                type: 'personal'\n            },\n            {\n                id: 2,\n                name:'ken Lou',\n                email:'k@gmail.com',\n                phone: '299-222-2222',\n                type: 'personal'\n            },\n            {\n                id: 3,\n                name:'Tom Litman',\n                email:'t@gmail.com',\n                phone: '222-222-000',\n                type: 'professional'\n            }\n        ],\n        current: null\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n    // Add Contact\n\n    const addContact = contact => {\n        \n        contact.id = \"id\" + Math.random().toString(16).slice(2);\n        dispatch({type: ADD_CONTACT, payload: contact });\n    }\n\n    // Delete Contact\n\n    const deleteContact = id => {   \n        dispatch({type: DELETE_CONTACT, payload: id });\n    }\n\n    // Set Current Contact\n    const setCurrent = contact => {   \n        dispatch({type: SET_CURRENT, payload: contact });\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {   \n        dispatch({type: CLEAR_CURRENT });\n    }\n    //Update Contact\n\n    // Filter Contacts\n\n    //Clear filter\n\n\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent\n            }}\n            >\n                {props.children}\n            </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}